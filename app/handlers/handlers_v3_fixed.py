#!/usr/bin/env python3
"""
üß† HANDLERS v3.2 - –í–°–¢–†–û–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–ï–†–°–û–ù–ê–ñ–ï–ô
üöÄ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä—è–º–æ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
"""

import logging
import asyncio
import random
import re
from datetime import datetime, timedelta
from aiogram import Router, F
from aiogram.types import Message, Sticker
from aiogram.filters import CommandStart, Command
from aiogram.exceptions import TelegramBadRequest

logger = logging.getLogger(__name__)

# AI –ú–û–î–£–õ–ò
human_ai = None
memory_module = None
advanced_triggers = None
media_triggers = None

try:
    from app.services.human_ai_service import HumanLikeAI, create_conversation_context
    AI_AVAILABLE = True
    logger.info("‚úÖ Human-like AI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è Human AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    AI_AVAILABLE = False

try:
    from app.modules.conversation_memory import ConversationMemoryModule
    MEMORY_AVAILABLE = True
    logger.info("‚úÖ –ü–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è –ü–∞–º—è—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
    MEMORY_AVAILABLE = False

try:
    from app.modules.advanced_triggers import AdvancedTriggersModule
    TRIGGERS_AVAILABLE = True
    logger.info("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è –¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
    TRIGGERS_AVAILABLE = False

try:
    from app.modules.media_triggers import MediaTriggersModule
    MEDIA_AVAILABLE = True
    logger.info("‚úÖ –ú–µ–¥–∏–∞ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è –ú–µ–¥–∏–∞ —Ç—Ä–∏–≥–≥–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
    MEDIA_AVAILABLE = False

# –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
last_activity_time = {}
conversation_contexts = {}
bot_trigger_words = ["–±–æ—Ç", "bot", "—Ä–æ–±–æ—Ç", "–ø–æ–º–æ—â–Ω–∏–∫", "assistant", "—ç–π", "—Å–ª—É—à–∞–π", "–º–∞–∫—Å"]
chat_stats = {}
user_stats = {}


def register_all_handlers(dp, modules):
    """üéõÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ v3.2"""
    
    global human_ai, memory_module, advanced_triggers, media_triggers
    
    router = Router()
    bot_info = None
    
    async def get_bot_info():
        nonlocal bot_info
        try:
            bot_info = await modules['bot'].get_me()
            logger.info(f"ü§ñ –ë–æ—Ç: @{bot_info.username} ({bot_info.first_name})")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
    
    async def initialize_ai_modules():
        """üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –º–æ–¥—É–ª–µ–π"""
        global human_ai, memory_module, advanced_triggers, media_triggers
        
        try:
            if AI_AVAILABLE and modules.get('ai'):
                human_ai = HumanLikeAI(modules['config'])
                logger.info("üß† Ultimate Human-like AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–∂–∏–≤–æ–π —Å—Ç–∏–ª—å)")
            
            if MEMORY_AVAILABLE and modules.get('db'):
                memory_module = ConversationMemoryModule(modules['db'])
                await memory_module.initialize()
                logger.info("üí≠ Ultimate –ø–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            if TRIGGERS_AVAILABLE and modules.get('db'):
                advanced_triggers = AdvancedTriggersModule(modules['db'], modules['config'], modules.get('ai'))
                await advanced_triggers.initialize()
                logger.info("‚ö° Ultimate —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
            
            if MEDIA_AVAILABLE and modules.get('db') and modules.get('bot'):
                media_triggers = MediaTriggersModule(modules['db'], modules['config'], modules['bot'])
                await media_triggers.initialize()
                logger.info("üé≠ Ultimate –º–µ–¥–∏–∞ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI –º–æ–¥—É–ª–µ–π: {e}")
    
    asyncio.create_task(get_bot_info())
    asyncio.create_task(initialize_ai_modules())
    
    # –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò
    async def update_stats(message: Message):
        """üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        try:
            chat_id = message.chat.id
            user_id = message.from_user.id
            now = datetime.now()
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞
            if chat_id not in chat_stats:
                chat_stats[chat_id] = {
                    'messages_count': 0,
                    'unique_users': set(),
                    'first_message': now,
                    'last_activity': now,
                    'chat_type': message.chat.type,
                    'chat_title': message.chat.title or message.chat.first_name or '–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
                }
            
            chat_stats[chat_id]['messages_count'] += 1
            chat_stats[chat_id]['unique_users'].add(user_id)
            chat_stats[chat_id]['last_activity'] = now
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id not in user_stats:
                user_stats[user_id] = {
                    'messages_count': 0,
                    'first_seen': now,
                    'last_seen': now,
                    'name': message.from_user.first_name or '–ê–Ω–æ–Ω–∏–º',
                    'username': message.from_user.username,
                    'chats': set()
                }
            
            user_stats[user_id]['messages_count'] += 1
            user_stats[user_id]['last_seen'] = now
            user_stats[user_id]['chats'].add(chat_id)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    async def check_chat_access(message: Message) -> bool:
        """üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É"""
        config = modules['config']
        chat_id = message.chat.id
        user_id = message.from_user.id
        
        if user_id in config.bot.admin_ids:
            return True
            
        if not config.bot.allowed_chat_ids:
            return True
            
        if chat_id not in config.bot.allowed_chat_ids:
            return False
            
        return True
    
    async def log_and_learn(message: Message):
        """üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        try:
            await update_stats(message)
            
            if modules.get('db'):
                await modules['db'].log_message(
                    chat_id=message.chat.id,
                    user_id=message.from_user.id,
                    username=message.from_user.username or '',
                    full_name=message.from_user.full_name or '',
                    text=message.text or '',
                    message_type='text',
                    timestamp=datetime.now()
                )
            
            if memory_module:
                await memory_module.update_user_interaction(
                    message.from_user.id,
                    message.text or '',
                    "general",
                    "neutral"
                )
                
        except Exception as e:
            logger.error(f"‚ùå Ultimate: –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    # =========================== –í–°–¢–†–û–ï–ù–ù–´–ï –ö–û–ú–ê–ù–î–´ –ü–ï–†–°–û–ù–ê–ñ–ï–ô v3.2 ===========================
    
    @router.message(Command('be'))
    async def cmd_be_personality(message: Message):
        """üé≠ –ö–æ–º–∞–Ω–¥–∞ /be - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (v3.2: —Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø—ã –∏ –∞–¥–º–∏–Ω—ã)"""
        
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        try:
            personality_manager = modules.get('custom_personality_manager')
            
            if not personality_manager:
                await message.reply("‚ùå –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
            can_use, access_reason = await personality_manager.can_use_personalities(
                message.from_user.id, message.chat.id
            )
            
            if not can_use:
                # –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø –∏ –õ–°
                if message.chat.id < 0:  # –ì—Ä—É–ø–ø–∞
                    await message.reply(
                        f"üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω\n\n"
                        f"{access_reason}\n\n"
                        f"üëë –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç:\n"
                        f"‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤ –≥—Ä—É–ø–ø–∞—Ö\n"
                        f"‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –±–æ—Ç–∞\n"
                        f"‚Ä¢ –°–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏"
                    )
                else:  # –õ–∏—á–Ω—ã–π —á–∞—Ç
                    await message.reply(
                        "üö´ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n\n"
                        "üìç –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö\n\n"
                        "üîÑ –ß—Ç–æ –¥–µ–ª–∞—Ç—å:\n"
                        "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç\n"
                        "2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
                        "3. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –æ–±—â–µ–Ω–∏–µ–º —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º!\n\n"
                        "üí° –ó–∞—á–µ–º —Ç–∞–∫: –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø"
                    )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            command_args = message.text.split(' ', 1)
            if len(command_args) < 2:
                chat_type = "–≥—Ä—É–ø–ø–µ" if message.chat.id < 0 else "—Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
                
                await message.reply(
                    f"üé≠ –ö–æ–º–∞–Ω–¥–∞ /be - —Å—Ç–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n"
                    f"`/be –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞`\n\n"
                    f"–ü—Ä–∏–º–µ—Ä:\n"
                    f"`/be —Ç—ã –∫—Ä—É—Ç–æ–π —Ö–∞–∫–µ—Ä –∏–∑ –∫–∏–±–µ—Ä–ø–∞–Ω–∫–∞, –≥–æ–≤–æ—Ä–∏—à—å —Å–ª–µ–Ω–≥–æ–º`\n\n"
                    f"–î–µ–π—Å—Ç–≤–∏–µ: –í {chat_type} –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∫–∞–∫ —ç—Ç–æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n"
                    f"üìè –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\n"
                    f"‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: 5-500 —Å–∏–º–≤–æ–ª–æ–≤\n"
                    f"‚Ä¢ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –±–æ—Ç–∞\n"
                    f"‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö"
                )
                return
            
            description = command_args[1].strip()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É v3.2
            success, result_message = await personality_manager.set_personality(
                message.from_user.id, message.chat.id, description
            )
            
            if success:
                result_message += f"\n\nüëë –£—Å—Ç–∞–Ω–æ–≤–∏–ª: {message.from_user.first_name}"
                
                if message.chat.id < 0:  # –ì—Ä—É–ø–ø–∞
                    result_message += f"\nüåç –û—Ö–≤–∞—Ç: –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã"
                else:  # –õ–° –∞–¥–º–∏–Ω–∞
                    result_message += f"\nüß™ –†–µ–∂–∏–º: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞"
                
                await message.reply(result_message)
            else:
                await message.reply(result_message)
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /be: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    @router.message(Command('reset_persona'))
    async def cmd_reset_persona(message: Message):
        """üîÑ –ö–æ–º–∞–Ω–¥–∞ /reset_persona - —Å–±—Ä–æ—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (v3.2)"""
        
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        try:
            personality_manager = modules.get('custom_personality_manager')
            
            if not personality_manager:
                await message.reply("‚ùå –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            can_use, access_reason = await personality_manager.can_use_personalities(
                message.from_user.id, message.chat.id
            )
            
            if not can_use:
                if message.chat.id < 0:  # –ì—Ä—É–ø–ø–∞
                    await message.reply(
                        f"üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω\n\n"
                        f"{access_reason}\n\n"
                        f"üëë –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –±–æ—Ç–∞ –º–æ–≥—É—Ç:\n"
                        f"‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤ –≥—Ä—É–ø–ø–∞—Ö\n"
                        f"‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –±–æ—Ç–∞\n"
                        f"‚Ä¢ –°–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏"
                    )
                else:  # –õ–∏—á–Ω—ã–π —á–∞—Ç
                    await message.reply(
                        f"üö´ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n\n"
                        f"üìç –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö"
                    )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
            active_personality = await personality_manager.get_active_personality(message.chat.id)
            
            if not active_personality:
                chat_location = "–≥—Ä—É–ø–ø–µ" if message.chat.id < 0 else "—á–∞—Ç–µ"
                await message.reply(
                    f"ü§∑‚Äç‚ôÇÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n\n"
                    f"–í —ç—Ç–æ–º {chat_location} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                )
                return
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            success, result_message = await personality_manager.reset_personality(
                message.from_user.id, message.chat.id
            )
            
            if success:
                result_message += f"\n\nüëë –°–±—Ä–æ—Å–∏–ª: {message.from_user.first_name}"
                await message.reply(result_message)
            else:
                await message.reply(result_message)
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /reset_persona: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    @router.message(Command('current_persona'))
    async def cmd_current_persona(message: Message):
        """üé≠ –ö–æ–º–∞–Ω–¥–∞ /current_persona - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ"""
        
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        try:
            personality_manager = modules.get('custom_personality_manager')
            
            if not personality_manager:
                await message.reply("‚ùå –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
            active_personality = await personality_manager.get_active_personality(message.chat.id)
            
            if not active_personality:
                if message.chat.id > 0 and message.from_user.id not in modules['config'].bot.admin_ids:
                    # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –õ–°
                    await message.reply(
                        f"üìç –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö\n\n"
                        f"üîÑ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!"
                    )
                else:
                    # –ê–¥–º–∏–Ω –∏–ª–∏ –≥—Ä—É–ø–ø–∞ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    chat_location = "–≥—Ä—É–ø–ø–µ" if message.chat.id < 0 else "—á–∞—Ç–µ"
                    await message.reply(
                        f"ü§∑‚Äç‚ôÇÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n\n"
                        f"–í —ç—Ç–æ–º {chat_location} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                    )
                return
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
            response = f"üé≠ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n"
            response += f"–ò–º—è: {active_personality['name']}\n"
            response += f"–û–ø–∏—Å–∞–Ω–∏–µ: {active_personality['description']}\n\n"
            
            if message.chat.id < 0:  # –ì—Ä—É–ø–ø–∞
                response += f"üåç –¢–∏–ø: –ì—Ä—É–ø–ø–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂\n"
                response += f"üéØ –û—Ö–≤–∞—Ç: –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã"
            else:  # –õ–° –∞–¥–º–∏–Ω–∞
                response += f"üß™ –¢–∏–ø: –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n"
                response += f"üéØ –û—Ö–≤–∞—Ç: –¢–æ–ª—å–∫–æ —ç—Ç–æ—Ç —á–∞—Ç"
            
            await message.reply(response)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /current_persona: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ")
    
    # =========================== –û–°–¢–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ ===========================
    
    @router.message(CommandStart())
    async def start_handler(message: Message):
        """üöÄ –ö–æ–º–∞–Ω–¥–∞ /start"""
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        user_name = message.from_user.first_name or "–¥—Ä—É–≥"
        
        casual_greetings = [
            f"–ô–æ, {user_name}! üëã –ß–µ –∫–∞–∫?",
            f"–î–∞—Ä–æ–≤–∞, {user_name}! üòÑ –ß—Ç–æ –Ω–æ–≤–æ–≥–æ?", 
            f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –†–∞–¥ –≤–∏–¥–µ—Ç—å üëç",
            f"–•–∞–π, {user_name}! –ö–∞–∫ –¥–µ–ª–∞? üòä",
            f"–°–∞–ª—é—Ç, {user_name}! –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?"
        ]
        
        greeting = random.choice(casual_greetings)
        await message.reply(greeting)
        
        logger.info(f"‚úÖ Ultimate /start: {message.from_user.id}")
    
    @router.message(Command('karma'))
    async def karma_handler(message: Message):
        """‚öñÔ∏è –ú–æ—è –∫–∞—Ä–º–∞"""
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        try:
            karma_manager = modules.get('karma_manager')
            
            if not karma_manager:
                await message.reply("‚ùå –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                return
            
            user_karma = await karma_manager.get_user_karma(message.from_user.id, message.chat.id)
            level_info = karma_manager.get_level_info(user_karma.level)
            
            text = f"‚öñÔ∏è –ö–ê–†–ú–ê {message.from_user.first_name}\n\n"
            text += f"üî• –ö–∞—Ä–º–∞: {user_karma.karma}\n"
            text += f"{level_info.emoji} –£—Ä–æ–≤–µ–Ω—å: {level_info.name} (lvl {user_karma.level})\n"
            text += f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {user_karma.message_count}\n\n"
            
            await message.reply(text)
        
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /karma: {e}")
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä–º—ã")
    
    @router.message(Command('help'))
    async def help_handler(message: Message):
        """üìñ –°–ø—Ä–∞–≤–∫–∞ v3.2"""
        if not await check_chat_access(message):
            return
            
        await log_and_learn(message)
        
        is_admin = message.from_user.id in modules['config'].bot.admin_ids
        is_group = message.chat.id < 0
        
        if is_admin:
            help_text = (
                "ü§ñ –ú–∞–∫—Å - AI —Å –ü–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ v3.2\n\n"
                "üé≠ –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ (–ê–¥–º–∏–Ω):\n"
                "‚Ä¢ `/be –æ–ø–∏—Å–∞–Ω–∏–µ` - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
                "‚Ä¢ `/reset_persona` - —Å–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
                "‚Ä¢ `/current_persona` - —Ç–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n"
                "‚öñÔ∏è –ö–∞—Ä–º–∞:\n"
                "‚Ä¢ `/karma` - –º–æ—è –∫–∞—Ä–º–∞\n\n"
                "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ:\n"
                "‚Ä¢ `/start` - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
                "‚Ä¢ `/help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
                "üí° v3.2: –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã"
            )
        elif is_group:
            help_text = (
                "ü§ñ –ú–∞–∫—Å - AI —Å –ü–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏\n\n"
                "üé≠ –ü–µ—Ä—Å–æ–Ω–∞–∂–∏:\n"
                "‚Ä¢ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å\n"
                "‚Ä¢ `/current_persona` - —Ç–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂\n\n"
                "‚öñÔ∏è –ö–∞—Ä–º–∞:\n"
                "‚Ä¢ `/karma` - –º–æ—è –∫–∞—Ä–º–∞\n\n"
                "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ:\n"
                "‚Ä¢ `/start` - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
                "‚Ä¢ `/help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
            )
        else:
            help_text = (
                "ü§ñ –ú–∞–∫—Å - AI –ë–æ—Ç\n\n"
                "üìç –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö\n\n"
                "üîÑ –ß—Ç–æ –¥–µ–ª–∞—Ç—å:\n"
                "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç\n"
                "2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
                "3. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –æ–±—â–µ–Ω–∏–µ–º!\n\n"
                "‚öñÔ∏è –ö–∞—Ä–º–∞:\n"
                "‚Ä¢ `/karma` - –º–æ—è –∫–∞—Ä–º–∞\n\n"
                "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ:\n"
                "‚Ä¢ `/start` - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"
            )
        
        await message.reply(help_text)
    
    # –¢–ï–ö–°–¢ - –û–ë–†–ê–ë–û–¢–ß–ò–ö –° –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò v3.2
    @router.message(F.text)
    async def text_handler(message: Message):
        """üí¨ –£–º–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ v3.2"""
        
        await log_and_learn(message)
        
        if not await check_chat_access(message):
            return
        
        if message.text.startswith('/'):
            return
            
        text_lower = message.text.lower()
        should_respond = False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—á–∞—Ç—å
        if message.reply_to_message and message.reply_to_message.from_user.id == modules['bot'].id:
            should_respond = True
        elif any(word in text_lower for word in bot_trigger_words):
            should_respond = True
        elif bot_info and f'@{bot_info.username.lower()}' in text_lower:
            should_respond = True
        elif message.chat.type == 'private':
            should_respond = True
        
        # –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò v3.2
        if should_respond:
            try:
                personality_manager = modules.get('custom_personality_manager')
                
                if personality_manager:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
                    personality = await personality_manager.get_active_personality(message.chat.id)
                    
                    if personality:
                        # –û–¢–í–ï–ß–ê–ï–ú –í –†–û–õ–ò –ü–ï–†–°–û–ù–ê–ñ–ê
                        if modules.get('ai'):
                            try:
                                ai_service = modules['ai']
                                
                                response = await ai_service.generate_response(
                                    f"–û—Ç–≤–µ—á–∞–π –∫–∞–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂: {personality['system_prompt']}\n\n–í–æ–ø—Ä–æ—Å: {message.text}",
                                    user_id=message.from_user.id,
                                    context={'personality': personality['name']}
                                )
                                
                                if response:
                                    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                                    persona_response = f"üé≠ {personality['name']}: {response}"
                                    await message.reply(persona_response)
                                    
                                    logger.info(f"üé≠ –û—Ç–≤–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {personality['name']} –≤ —á–∞—Ç–µ {message.chat.id}")
                                    return
                                    
                            except Exception as e:
                                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {e}")
                
                # –û–ë–´–ß–ù–´–ô AI –û–¢–í–ï–¢ (–µ—Å–ª–∏ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞)
                if modules.get('ai'):
                    try:
                        ai_service = modules['ai']
                        
                        response = await ai_service.generate_response(
                            message.text,
                            user_id=message.from_user.id
                        )

                        if response:
                            await message.reply(f"ü§ñ {response}")
                            return
                            
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ AI –æ—Ç–≤–µ—Ç–∞: {e}")
                
                # FALLBACK: –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã
                casual_responses = [
                    "–ê–≥–∞", "–ü–æ–Ω—è—Ç–Ω–æ", "–ù–æ—Ä–º", "–û–∫–µ–π", "–£–≥—É", "–¢–æ—á–Ω–æ",
                    "–ò —á—Ç–æ –¥–∞–ª—å—à–µ?", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "–•–º", "–Ø—Å–Ω–æ"
                ]
                
                response = random.choice(casual_responses)
                await message.reply(response)
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
    
    # –°–¢–ò–ö–ï–†–´
    @router.message(F.sticker)
    async def sticker_handler(message: Message):
        """üé≠ –°—Ç–∏–∫–µ—Ä—ã"""
        if not await check_chat_access(message):
            return
        
        await log_and_learn(message)
        
        if random.random() < 0.15:
            reactions = ["üëç", "üòÑ", "ü§∑‚Äç‚ôÇÔ∏è", "–ù–æ—Ä–º!", "–û–∫"]
            await message.reply(random.choice(reactions))
    
    # –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø ROUTER
    dp.include_router(router)
    logger.info("üéõÔ∏è –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ v3.2 –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏)")