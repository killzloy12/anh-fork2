#!/usr/bin/env python3
"""
üîß –ú–ò–ì–†–ê–¶–ò–Ø v3.2.1 - –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
"""

import asyncio
import aiosqlite
import os

async def migrate_personality_table():
    """üîÑ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è v3.2"""
    
    db_path = "data/bot.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        async with aiosqlite.connect(db_path) as db:
            print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã custom_personalities...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor = await db.execute("PRAGMA table_info(custom_personalities)")
            columns = await cursor.fetchall()
            
            column_names = [col[1] for col in columns]
            print(f"üìã –ù–∞–π–¥–µ–Ω—ã —Å—Ç–æ–ª–±—Ü—ã: {column_names}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è v3.2
            missing_columns = []
            
            if 'personality_name' not in column_names:
                missing_columns.append(('personality_name', 'TEXT DEFAULT ""'))
                
            if 'personality_description' not in column_names:
                missing_columns.append(('personality_description', 'TEXT DEFAULT ""'))
                
            if 'is_group_personality' not in column_names:
                missing_columns.append(('is_group_personality', 'BOOLEAN DEFAULT FALSE'))
            
            if 'updated_at' not in column_names:
                missing_columns.append(('updated_at', 'DATETIME DEFAULT CURRENT_TIMESTAMP'))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
            for column_name, column_type in missing_columns:
                print(f"‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü {column_name}...")
                await db.execute(f"""
                    ALTER TABLE custom_personalities 
                    ADD COLUMN {column_name} {column_type}
                """)
                print(f"‚úÖ –°—Ç–æ–ª–±–µ—Ü {column_name} –¥–æ–±–∞–≤–ª–µ–Ω")
            
            if missing_columns:
                await db.commit()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
                print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏...")
                
                await db.execute("""
                    UPDATE custom_personalities 
                    SET personality_name = SUBSTR(description, 1, 50),
                        personality_description = description,
                        is_group_personality = (chat_id < 0),
                        updated_at = CURRENT_TIMESTAMP
                    WHERE personality_name = '' OR personality_name IS NULL
                """)
                
                await db.commit()
                print("‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                
            else:
                print("‚ÑπÔ∏è –í—Å–µ —Å—Ç–æ–ª–±—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            cursor = await db.execute("PRAGMA table_info(custom_personalities)")
            columns = await cursor.fetchall()
            
            print("\nüìã –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ custom_personalities:")
            for col in columns:
                print(f"  ‚Ä¢ {col[1]} ({col[2]})")
            
            print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è v3.2.1 –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(migrate_personality_table())