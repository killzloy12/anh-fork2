#!/usr/bin/env python3
"""
üíÄ ENHANCED TELEGRAM BOT v3.0 - –° –ü–†–û–ò–ó–í–û–õ–¨–ù–´–ú–ò –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò –ò –ö–ê–†–ú–û–ô
üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä—É—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ —Å AI –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏

–ù–û–í–û–ï –í v3.0:
‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ (/be –æ–ø–∏—Å–∞–Ω–∏–µ)
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã —Å —É—Ä–æ–≤–Ω—è–º–∏
‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–π AI —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–∞—Ä–º—ã
‚Ä¢ –£–º–Ω–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è
"""

import asyncio
import logging
import sys
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
if sys.platform == "win32":
    import locale
    import codecs
    
    try:
        locale.setlocale(locale.LC_ALL, '')
        sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
        sys.stderr = codecs.getwriter("utf-8")(sys.stderr.detach())
    except:
        pass

sys.path.insert(0, str(Path(__file__).parent))

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import BotCommand

try:
    from config_harsh import load_config
    from database import DatabaseService
except ImportError as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω –º–æ–¥—É–ª—å {e.name}")
    print("–ò—Å–ø–æ–ª—å–∑—É–π config_harsh.py –∫–∞–∫ config.py")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    sys.exit(1)

# –ò–ú–ü–û–†–¢ AI –ú–û–î–£–õ–ï–ô (–ù–û–í–û–ï!)
try:
    from app.services.human_ai_service import HumanLikeAI, create_conversation_context
    from app.modules.conversation_memory import ConversationMemoryModule
    from app.modules.advanced_triggers import AdvancedTriggersModule
    from app.modules.media_triggers import MediaTriggersModule
    AI_MODULES_AVAILABLE = True
    print("‚úÖ AI –º–æ–¥—É–ª–∏ –Ω–∞–π–¥–µ–Ω—ã!")
except ImportError as e:
    print(f"‚ö†Ô∏è AI –º–æ–¥—É–ª—å {e.name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    AI_MODULES_AVAILABLE = False

# –ò–ú–ü–û–†–¢ –ù–û–í–´–• –°–ò–°–¢–ï–ú (–ü–ï–†–°–û–ù–ê–ñ–ò –ò –ö–ê–†–ú–ê)
try:
    from app.modules.custom_personality_system import CustomPersonalityManager
    from app.modules.karma_system import KarmaManager
    PERSONA_KARMA_AVAILABLE = True
    print("‚úÖ –°–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –∫–∞—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã!")
except ImportError as e:
    print(f"‚ö†Ô∏è –ú–æ–¥—É–ª—å {e.name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    PERSONA_KARMA_AVAILABLE = False

# –ò–ú–ü–û–†–¢ –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í
try:
    from app.handlers.handlers_v3_fixed import register_all_handlers
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ handlers_v3_fixed.py")
    sys.exit(1)

# –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –°–ï–†–í–ò–°–´
try:
    from app.services.ai_service import AIService
    from app.services.analytics_service import AnalyticsService 
    from app.services.crypto_service import CryptoService
    SERVICES_AVAILABLE = True
except ImportError as e:
    print(f"‚ö†Ô∏è –°–µ—Ä–≤–∏—Å {e.name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    SERVICES_AVAILABLE = False

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler()]
)

logger = logging.getLogger(__name__)

async def setup_bot_commands(bot: Bot):
    """‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    
    commands = [
        BotCommand(command="start", description="üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand(command="help", description="üìñ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã"),
        BotCommand(command="be", description="üé≠ –°—Ç–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º"),
        BotCommand(command="karma", description="‚öñÔ∏è –ú–æ—è –∫–∞—Ä–º–∞"),
        BotCommand(command="ai", description="üß† AI –ø–æ–º–æ—â–Ω–∏–∫"),
        BotCommand(command="my_personas", description="üë§ –ú–æ–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏"),
        BotCommand(command="karma_top", description="üèÜ –¢–æ–ø –∫–∞—Ä–º—ã"),
        BotCommand(command="reset_persona", description="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"),
    ]
    
    await bot.set_my_commands(commands)
    logger.info("‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

async def main():
    """üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    
    print("üé≠ ENHANCED TELEGRAM BOT v3.0 - –ü–ï–†–°–û–ù–ê–ñ–ò –ò –ö–ê–†–ú–ê")
    print("üß† –° –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ —Å–∏—Å—Ç–µ–º–æ–π –∫–∞—Ä–º—ã")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        directories = [
            'data/logs', 'data/charts', 'data/exports', 'data/backups',
            'data/triggers', 'data/moderation', 'app/services', 'app/modules', 'app/handlers'
        ]
        
        for directory in directories:
            Path(directory).mkdir(parents=True, exist_ok=True)
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
        file_handler = logging.FileHandler('data/logs/bot.log', encoding='utf-8')
        file_handler.setFormatter(logging.Formatter(
            '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        ))
        logging.getLogger().addHandler(file_handler)
        
        config = load_config()
        
        if not config.bot.token:
            print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("1. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª .env")
            print("2. –ó–∞–ø–æ–ª–Ω–∏ BOT_TOKEN –∏ ADMIN_IDS")
            input("–ù–∞–∂–º–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            return
        
        if not config.bot.admin_ids:
            print("‚ùå –û–®–ò–ë–ö–ê: ADMIN_IDS –Ω–µ —É–∫–∞–∑–∞–Ω—ã!")
            input("–ù–∞–∂–º–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            return
        
        bot = Bot(
            token=config.bot.token,
            default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN)
        )
        
        dp = Dispatcher()
        
        print("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db_service = DatabaseService(config.database)
        await db_service.initialize()
        
        # –ú–û–î–£–õ–ò
        modules = {
            'config': config,
            'db': db_service,
            'bot': bot
        }
        
        # –ë–ê–ó–û–í–´–ï –°–ï–†–í–ò–°–´
        if SERVICES_AVAILABLE:
            print("üß† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI —Å–µ—Ä–≤–∏—Å–∞...")
            if config.ai.openai_api_key or config.ai.anthropic_api_key:
                modules['ai'] = AIService(config)
                print("  ‚úÖ AI —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            else:
                print("  ‚ö†Ô∏è AI —Å–µ—Ä–≤–∏—Å –æ—Ç–∫–ª—é—á–µ–Ω (–Ω–µ—Ç –∫–ª—é—á–µ–π)")
            
            print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
            modules['analytics_service'] = AnalyticsService(db_service)
            
            print("‚Çø –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ...")
            if config.crypto.enabled:
                modules['crypto_service'] = CryptoService(config)
                print("  ‚úÖ –ö—Ä–∏–ø—Ç–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
        
        # AI –ú–û–î–£–õ–ò (–ß–ï–õ–û–í–ï–ö–û–ü–û–î–û–ë–ù–´–ô AI)
        if AI_MODULES_AVAILABLE:
            print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ AI...")
            
            try:
                # Human-like AI
                modules['human_ai'] = HumanLikeAI(config)
                print("  ‚úÖ Human-like AI –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
                
                # –ü–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤
                modules['conversation_memory'] = ConversationMemoryModule(db_service)
                await modules['conversation_memory'].initialize()
                print("  ‚úÖ –ü–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
                
                # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
                modules['advanced_triggers'] = AdvancedTriggersModule(
                    db_service, config, modules.get('ai')
                )
                await modules['advanced_triggers'].initialize()
                print("  ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
                
                # –ú–µ–¥–∏–∞ —Ç—Ä–∏–≥–≥–µ—Ä—ã
                modules['media_triggers'] = MediaTriggersModule(
                    db_service, config, bot
                )
                await modules['media_triggers'].initialize()
                print("  ‚úÖ –ú–µ–¥–∏–∞ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ AI –º–æ–¥—É–ª–µ–π: {e}")
                print(f"‚ö†Ô∏è AI –º–æ–¥—É–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
        
        # –ù–û–í–´–ï –°–ò–°–¢–ï–ú–´ (–ü–ï–†–°–û–ù–ê–ñ–ò –ò –ö–ê–†–ú–ê)
        if PERSONA_KARMA_AVAILABLE:
            print("üé≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π...")
            try:
                modules['custom_personality_manager'] = CustomPersonalityManager(
                    db_service, config, modules.get('ai')
                )
                await modules['custom_personality_manager'].initialize()
                print("  ‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {e}")
            
            print("‚öñÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã...")
            try:
                modules['karma_manager'] = KarmaManager(db_service, config)
                await modules['karma_manager'].initialize()
                print("  ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–∞—Ä–º—ã: {e}")
        
        # –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í
        print("üéõÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
        try:
            register_all_handlers(dp, modules)
            print("  ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            return
        
        # –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
        print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        try:
            bot_info = await bot.get_me()
            print(f"  ü§ñ –ü–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username}")
            print(f"  üìù –ò–º—è: {bot_info.first_name}")
            print(f"  üÜî ID: {bot_info.id}")
        except Exception as e:
            print(f"  ‚ùå –û–®–ò–ë–ö–ê: {e}")
            print("–ü—Ä–æ–≤–µ—Ä—å BOT_TOKEN")
            return
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥
        await setup_bot_commands(bot)
        
        # –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù–û–í
        if config.bot.admin_ids:
            features = []
            
            if AI_MODULES_AVAILABLE:
                features.append("üß† –ß–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω—ã–π AI")
            if PERSONA_KARMA_AVAILABLE:
                features.append("üé≠ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏")
                features.append("‚öñÔ∏è –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã")
            if SERVICES_AVAILABLE:
                features.append("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
                features.append("‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã")
            
            startup_message = (
                f"üé≠ **BOT v3.0 –ó–ê–ü–£–©–ï–ù!**\n\n"
                f"**–ë–æ—Ç:** @{bot_info.username}\n"
                f"**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
            )
            
            for feature in features:
                startup_message += f"‚Ä¢ {feature}\n"
            
            startup_message += (
                f"\n**üéØ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
                f"‚Ä¢ `/be –æ–ø–∏—Å–∞–Ω–∏–µ` - —Å—Ç–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º\n"
                f"‚Ä¢ `/karma` - –º–æ—è –∫–∞—Ä–º–∞\n"
                f"‚Ä¢ `/karma_top` - —Ç–æ–ø –ø–æ –∫–∞—Ä–º–µ\n"
                f"‚Ä¢ `/my_personas` - –º–æ–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏\n\n"
                f"**–ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!**"
            )
            
            for admin_id in config.bot.admin_ids:
                try:
                    await bot.send_message(admin_id, startup_message)
                    print(f"  üì§ –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω: {admin_id}")
                except Exception as e:
                    print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å {admin_id}: {e}")
        
        print("\n" + "=" * 60)
        print("üé≠ ENHANCED BOT v3.0 –° –ü–ï–†–°–û–ù–ê–ñ–ê–ú–ò –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!")
        
        if AI_MODULES_AVAILABLE and PERSONA_KARMA_AVAILABLE:
            print("üöÄ –†–ï–ñ–ò–ú: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò")
            print("\nüé≠ –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
            print("  ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ (/be –æ–ø–∏—Å–∞–Ω–∏–µ)")
            print("  ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã —Å 7 —É—Ä–æ–≤–Ω—è–º–∏")
            print("  ‚Ä¢ AI –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Ä–æ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
            print("  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–∞—Ä–º—ã")
            print("  ‚Ä¢ –£–º–Ω–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è —Å –∫–∞—Ä–º–æ–π")
        elif AI_MODULES_AVAILABLE:
            print("üß† –†–ï–ñ–ò–ú: –ß–ï–õ–û–í–ï–ö–û–ü–û–î–û–ë–ù–´–ô AI")
        else:
            print("‚ö†Ô∏è –†–ï–ñ–ò–ú: –ë–ê–ó–û–í–´–ô")
        
        print("=" * 60)
        
        if config.bot.allowed_chat_ids:
            print(f"\nüîí –†–ê–ó–†–ï–®–ï–ù–ù–´–ï –ß–ê–¢–´: {config.bot.allowed_chat_ids}")
        
        print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
        
        try:
            await dp.start_polling(bot, skip_updates=True)
        except KeyboardInterrupt:
            print("\n‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
        finally:
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
            if modules.get('crypto_service'):
                await modules['crypto_service'].close()
            if modules.get('db'):
                await modules['db'].close()
            await bot.session.close()
            
            print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"üí• –û–®–ò–ë–ö–ê: {e}")
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—å:")
        print("  1. BOT_TOKEN –≤ .env")
        print("  2. ADMIN_IDS –≤ .env") 
        print("  3. –ù–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –º–æ–¥—É–ª–µ–π")
        input("\n–ù–∞–∂–º–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
        input("–ù–∞–∂–º–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")